"""
üõ°Ô∏è –ó–ê–©–ò–¢–ê –û–¢ –°–ü–ê–ú–ê (RATE LIMITING)
–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import time
from collections import defaultdict

class RateLimiter:
    def __init__(self, max_requests=5, time_window=60):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è rate limiter
        
        Args:
            max_requests: –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –æ–∫–Ω–µ
            time_window: –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        """
        self.max_requests = max_requests
        self.time_window = time_window
        self.user_requests = defaultdict(list)  # {user_id: [timestamp1, timestamp2, ...]}
    
    def is_allowed(self, user_id: int) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à—ë–Ω –ª–∏ –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
        Returns:
            True –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à—ë–Ω, False –µ—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç
        """
        current_time = time.time()
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞
        self.user_requests[user_id] = [
            timestamp for timestamp in self.user_requests[user_id]
            if current_time - timestamp < self.time_window
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç
        if len(self.user_requests[user_id]) >= self.max_requests:
            return False
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å
        self.user_requests[user_id].append(current_time)
        return True
    
    def get_remaining_time(self, user_id: int) -> int:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –¥–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
        Returns:
            –°–µ–∫—É–Ω–¥—ã –¥–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        """
        if user_id not in self.user_requests or not self.user_requests[user_id]:
            return 0
        
        oldest_request = min(self.user_requests[user_id])
        current_time = time.time()
        remaining = self.time_window - (current_time - oldest_request)
        
        return max(0, int(remaining))

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç–∞–Ω—Å rate limiter
# 5 –∏–≥—Ä –≤ –º–∏–Ω—É—Ç—É = –º–∞–∫—Å–∏–º—É–º
game_rate_limiter = RateLimiter(max_requests=5, time_window=60)

# 10 –∫–æ–º–∞–Ω–¥ –≤ –º–∏–Ω—É—Ç—É
command_rate_limiter = RateLimiter(max_requests=10, time_window=60)
