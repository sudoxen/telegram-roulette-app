#!/usr/bin/env python3
"""
üé∞ –ö–ê–ó–ò–ù–û-–ë–û–¢ - –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã
"""

import asyncio
import json
import time
import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, F
from aiogram.types import WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup, MenuButtonWebApp, BotCommand
from aiogram.filters import Command
from database import db

# ÔøΩ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# ÔøΩüîë –¢–û–ö–ï–ù –û–¢ BOTFATHER (–∏–∑ .env —Ñ–∞–π–ª–∞)
BOT_TOKEN = os.getenv('BOT_TOKEN')
if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π —Ñ–∞–π–ª .env —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞.")

# üåê URL Web App (–∏–∑ .env –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π)
WEB_APP_URL = os.getenv('WEB_APP_URL', 'https://sudoxen.github.io/telegram-roulette-app/')

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

def get_webapp_url(balance, user_id):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL Web App —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º –∏ –≤–µ—Ä—Å–∏–µ–π"""
    timestamp = int(time.time())
    # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ URL –∏ –≤ —Ö—ç—à –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
    return f"{WEB_APP_URL}?balance={balance}&user_id={user_id}&v={timestamp}#balance={balance}"

@dp.message(Command("start"))
async def start_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∑–∞–ø—É—Å–∫ Web App"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    user = await db.get_or_create_user(user_id, username, first_name)
    balance = user['balance']
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å Web App —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –±–∞–ª–∞–Ω—Å–∞ –∏ –≤–µ—Ä—Å–∏–µ–π
    webapp_url = get_webapp_url(balance, user_id)
    web_app = WebAppInfo(url=webapp_url)
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üé∞ –ò–≥—Ä–∞—Ç—å –≤ —Ä—É–ª–µ—Ç–∫—É", web_app=web_app)],
        [InlineKeyboardButton(text="üí∞ –ú–æ–π –±–∞–ª–∞–Ω—Å", callback_data="balance")],
        [InlineKeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")],
        [InlineKeyboardButton(text="üèÜ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤", callback_data="top")]
    ])
    
    await message.answer(
        f"üéâ –ü—Ä–∏–≤–µ—Ç, {first_name}!\n\n"
        f"üé∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ!\n"
        f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: <b>{balance} ‚≠ê</b>\n\n"
        f"üéÆ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å:",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

@dp.message(Command("play"))
@dp.message(Command("webapp"))
async def play_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ /play - –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã"""
    user_id = message.from_user.id
    balance = await db.get_balance(user_id)
    
    if balance < 200:
        await message.answer(
            "üòî <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>\n\n"
            f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚≠ê\n"
            f"üéØ –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º: 200 ‚≠ê\n\n"
            f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /reset –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è 0 ‚≠ê",
            parse_mode="HTML"
        )
        return
    
    webapp_url = get_webapp_url(balance, user_id)
    web_app = WebAppInfo(url=webapp_url)
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –ò–ì–†–ê–¢–¨ –°–ï–ô–ß–ê–°!", web_app=web_app)],
        [InlineKeyboardButton(text="üí∞ –ë–∞–ª–∞–Ω—Å", callback_data="balance")]
    ])
    
    await message.answer(
        f"üéØ <b>–ì–æ—Ç–æ–≤—ã –∫ –∏–≥—Ä–µ?</b>\n\n"
        f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: <b>{balance} ‚≠ê</b>\n"
        f"üé≤ –°—Ç–∞–≤–∫–∞: 200 ‚≠ê\n"
        f"üèÜ –í—ã–∏–≥—Ä—ã—à: 200-2000 ‚≠ê\n\n"
        f"üçÄ –£–¥–∞—á–∏!",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

@dp.message(Command("balance"))
async def balance_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ /balance - –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å"""
    user_id = message.from_user.id
    balance = await db.get_balance(user_id)
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∏–≥—Ä—ã
    webapp_url = get_webapp_url(balance, user_id)
    web_app = WebAppInfo(url=webapp_url)
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üé∞ –ò–≥—Ä–∞—Ç—å", web_app=web_app)],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")],
        [InlineKeyboardButton(text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å", callback_data="reset_confirm")]
    ])
    
    await message.answer(
        f"üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚≠ê</b>\n\n"
        f"üéØ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 200 ‚≠ê\n"
        f"üé≤ –ú–Ω–æ–∂–∏—Ç–µ–ª–∏: 1X, 10X\n"
        f"üèÜ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à: 2000 ‚≠ê",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

@dp.message(Command("stats"))
async def stats_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ /stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    user_id = message.from_user.id
    stats = await db.get_user_stats(user_id)
    
    if stats:
        profit_emoji = "üìà" if stats['profit'] >= 0 else "üìâ"
        
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π
        webapp_url = get_webapp_url(stats['balance'], user_id)
        web_app = WebAppInfo(url=webapp_url)
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üé∞ –ò–≥—Ä–∞—Ç—å", web_app=web_app)],
            [InlineKeyboardButton(text="üèÜ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤", callback_data="top")]
        ])
        
        await message.answer(
            f"üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n"
            f"üí∞ –ë–∞–ª–∞–Ω—Å: <b>{stats['balance']} ‚≠ê</b>\n"
            f"üéØ –û–±—â–∏—Ö —Å—Ç–∞–≤–æ–∫: {stats['total_bets']} ‚≠ê\n"
            f"üèÜ –û–±—â–∏—Ö –≤—ã–∏–≥—Ä—ã—à–µ–π: {stats['total_wins']} ‚≠ê\n"
            f"{profit_emoji} –ü—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫: <b>{stats['profit']:+d} ‚≠ê</b>\n"
            f"üìÖ –ò–≥—Ä–∞–µ—Ç–µ —Å: {stats['created_at'][:10]}",
            reply_markup=keyboard,
            parse_mode="HTML"
        )
    else:
        await message.answer("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

@dp.message(Command("top"))
async def top_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ /top - —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤"""
    top_users = await db.get_top_users(10)
    
    if top_users:
        text = "üèÜ <b>–¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤:</b>\n\n"
        for i, user in enumerate(top_users, 1):
            emoji = "ü•á" if i == 1 else "ü•à" if i == 2 else "ü•â" if i == 3 else f"{i}Ô∏è‚É£"
            name = user['first_name'] or user['username'] or f"–ò–≥—Ä–æ–∫ {user['user_id']}"
            profit = user['total_wins'] - user['total_bets']
            profit_emoji = "üìà" if profit >= 0 else "üìâ"
            text += f"{emoji} {name}\nüí∞ {user['balance']} ‚≠ê {profit_emoji} {profit:+d}\n\n"
        
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∏–≥—Ä—ã
        user_id = message.from_user.id
        balance = await db.get_balance(user_id)
        webapp_url = get_webapp_url(balance, user_id)
        web_app = WebAppInfo(url=webapp_url)
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üé∞ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø!", web_app=web_app)]
        ])
        
        await message.answer(text, reply_markup=keyboard, parse_mode="HTML")
    else:
        await message.answer("üèÜ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø—É—Å—Ç")

@dp.message(Command("reset"))
async def reset_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ /reset - —Å–±—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞"""
    user_id = message.from_user.id
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞, —Å–±—Ä–æ—Å–∏—Ç—å", callback_data="reset_confirm")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="reset_cancel")]
    ])
    
    await message.answer(
        "üîÑ <b>–°–±—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞</b>\n\n"
        "‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!\n"
        "–í–∞—à –±–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–µ—Ç 0 ‚≠ê\n\n"
        "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

@dp.message(Command("help"))
async def help_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ /help - —Å–ø—Ä–∞–≤–∫–∞"""
    help_text = """
üé∞ <b>–ö–ê–ó–ò–ù–û-–ë–û–¢ - –°–ü–†–ê–í–ö–ê</b>

üéÆ <b>–ö–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ /start - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É
‚Ä¢ /play - –±—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞
‚Ä¢ /balance - –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å  
‚Ä¢ /stats - –º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ /top - —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ /reset - —Å–±—Ä–æ—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å
‚Ä¢ /help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üé≤ <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</b>
1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ "üé∞ –ò–≥—Ä–∞—Ç—å"
2Ô∏è‚É£ –°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É 200 ‚≠ê
3Ô∏è‚É£ –ö—Ä—É—Ç–∏—Ç–µ —Ä—É–ª–µ—Ç–∫—É
4Ô∏è‚É£ –í—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ 200-2000 ‚≠ê!

üèÜ <b>–ú–Ω–æ–∂–∏—Ç–µ–ª–∏:</b>
‚Ä¢ 1X = –≤—ã–∏–≥—Ä—ã—à 200 ‚≠ê
‚Ä¢ 10X = –î–ñ–ï–ö–ü–û–¢ 2000 ‚≠ê

üçÄ <b>–£–¥–∞—á–∏ –≤ –∏–≥—Ä–µ!</b>
"""
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∏–≥—Ä—ã
    user_id = message.from_user.id
    balance = await db.get_balance(user_id)
    webapp_url = get_webapp_url(balance, user_id)
    web_app = WebAppInfo(url=webapp_url)
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –ù–ê–ß–ê–¢–¨ –ò–ì–†–ê–¢–¨!", web_app=web_app)]
    ])
    
    await message.answer(help_text, reply_markup=keyboard, parse_mode="HTML")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
@dp.callback_query(F.data == "balance")
async def balance_callback(callback):
    """–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å"""
    user_id = callback.from_user.id
    balance = await db.get_balance(user_id)
    await callback.answer(f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚≠ê", show_alert=True)

@dp.callback_query(F.data == "stats")
async def stats_callback(callback):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    user_id = callback.from_user.id
    stats = await db.get_user_stats(user_id)
    
    if stats:
        profit_emoji = "üìà" if stats['profit'] >= 0 else "üìâ"
        stats_text = (
            f"üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
            f"üí∞ –ë–∞–ª–∞–Ω—Å: {stats['balance']} ‚≠ê\n"
            f"üéØ –°—Ç–∞–≤–æ–∫: {stats['total_bets']} ‚≠ê\n"
            f"üèÜ –í—ã–∏–≥—Ä—ã—à–µ–π: {stats['total_wins']} ‚≠ê\n"
            f"{profit_emoji} –ü—Ä–∏–±—ã–ª—å: {stats['profit']:+d} ‚≠ê"
        )
    else:
        stats_text = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    
    await callback.answer(stats_text, show_alert=True)

@dp.callback_query(F.data == "top")
async def top_callback(callback):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø"""
    await top_command(callback.message)
    await callback.answer()

@dp.callback_query(F.data == "reset_confirm")
async def reset_confirm_callback(callback):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞"""
    user_id = callback.from_user.id
    await db.reset_user_balance(user_id, 0)
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∏–≥—Ä—ã
    webapp_url = get_webapp_url(0, user_id)
    web_app = WebAppInfo(url=webapp_url)
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üé∞ –ò–≥—Ä–∞—Ç—å —Å –Ω–æ–≤—ã–º –±–∞–ª–∞–Ω—Å–æ–º!", web_app=web_app)]
    ])
    
    await callback.message.edit_text(
        "‚úÖ <b>–ë–∞–ª–∞–Ω—Å —Å–±—Ä–æ—à–µ–Ω!</b>\n\n"
        "üí∞ –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: 0 ‚≠ê\n"
        "üéÆ –£–¥–∞—á–∏ –≤ –Ω–æ–≤—ã—Ö –∏–≥—Ä–∞—Ö!",
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await callback.answer("‚úÖ –ë–∞–ª–∞–Ω—Å —Å–±—Ä–æ—à–µ–Ω!")

@dp.callback_query(F.data == "reset_cancel")
async def reset_cancel_callback(callback):
    """–û—Ç–º–µ–Ω–∞ —Å–±—Ä–æ—Å–∞"""
    await callback.message.edit_text(
        "‚ùå –°–±—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–º–µ–Ω–µ–Ω.\n\n"
        "üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å –æ—Å—Ç–∞–ª—Å—è –ø—Ä–µ–∂–Ω–∏–º.",
        parse_mode="HTML"
    )
    await callback.answer("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Web App
@dp.message(F.web_app_data)
async def web_app_data(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Web App"""
    try:
        data = json.loads(message.web_app_data.data)
        user_id = message.from_user.id
        
        if data.get('action') == 'bet_result':
            # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            new_balance = data.get('balance', 0)
            await db.update_balance(user_id, new_balance)
            
            bet = data.get('bet', 0)
            multiplier = data.get('multiplier', 1)
            win = data.get('win', 0)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ç–∞–≤–∫–∏
            await db.record_bet(user_id, bet, win)
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–≥—Ä—ã
            webapp_url = get_webapp_url(new_balance, user_id)
            web_app = WebAppInfo(url=webapp_url)
            
            if multiplier == 10:
                # –î–∂–µ–∫–ø–æ—Ç!
                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üéâ –ò–ì–†–ê–¢–¨ –ü–û–°–õ–ï –î–ñ–ï–ö–ü–û–¢–ê!", web_app=web_app)],
                    [InlineKeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")]
                ])
                await message.answer(
                    f"üéâ <b>–ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –î–ñ–ï–ö–ü–û–¢!</b> üéâ\n\n"
                    f"üí∞ –°—Ç–∞–≤–∫–∞: {bet} ‚≠ê\n"
                    f"üé≤ –ú–Ω–æ–∂–∏—Ç–µ–ª—å: <b>{multiplier}X</b>\n"
                    f"üíé –í—ã–∏–≥—Ä—ã—à: <b>{win} ‚≠ê</b>\n"
                    f"üè¶ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: <b>{new_balance} ‚≠ê</b>\n\n"
                    f"üçÄ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É?",
                    reply_markup=keyboard,
                    parse_mode="HTML"
                )
            else:
                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üé∞ –ò–≥—Ä–∞—Ç—å –µ—â–µ!", web_app=web_app)],
                    [InlineKeyboardButton(text="üí∞ –ú–æ–π –±–∞–ª–∞–Ω—Å", callback_data="balance")]
                ])
                await message.answer(
                    f"üé∞ <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã:</b>\n\n"
                    f"üí∞ –°—Ç–∞–≤–∫–∞: {bet} ‚≠ê\n"
                    f"üé≤ –ú–Ω–æ–∂–∏—Ç–µ–ª—å: {multiplier}X\n"
                    f"üíµ –í—ã–∏–≥—Ä—ã—à: {win} ‚≠ê\n"
                    f"üè¶ –ë–∞–ª–∞–Ω—Å: <b>{new_balance} ‚≠ê</b>\n\n"
                    f"üéÆ –ò–≥—Ä–∞–µ–º –µ—â–µ?",
                    reply_markup=keyboard,
                    parse_mode="HTML"
                )
        
    except Exception as e:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã")
        print(f"–û—à–∏–±–∫–∞ Web App –¥–∞–Ω–Ω—ã—Ö: {e}")

async def set_commands():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"""
    commands = [
        BotCommand(command="start", description="üé∞ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É"),
        BotCommand(command="play", description="üöÄ –ë—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞"),
        BotCommand(command="balance", description="üí∞ –ú–æ–π –±–∞–ª–∞–Ω—Å"),
        BotCommand(command="stats", description="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
        BotCommand(command="top", description="üèÜ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤"),
        BotCommand(command="reset", description="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å"),
        BotCommand(command="help", description="‚ùì –°–ø—Ä–∞–≤–∫–∞")
    ]
    
    await bot.set_my_commands(commands)

async def set_menu_button():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é"""
    web_app = WebAppInfo(url=WEB_APP_URL)
    menu_button = MenuButtonWebApp(text="üé∞ –ò–≥—Ä–∞—Ç—å", web_app=web_app)
    await bot.set_chat_menu_button(menu_button=menu_button)

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üé∞ –ó–ê–ü–£–°–ö –£–õ–£–ß–®–ï–ù–ù–û–ì–û –ö–ê–ó–ò–ù–û-–ë–û–¢–ê")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        await db.init_db()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞")
        
        await set_commands()
        print("‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
        await set_menu_button()
        print("‚úÖ –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        
        print(f"üåê Web App: {WEB_APP_URL}")
        print("üéÆ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("   /start - –Ω–∞—á–∞—Ç—å")
        print("   /play - –∏–≥—Ä–∞—Ç—å") 
        print("   /balance - –±–∞–ª–∞–Ω—Å")
        print("   /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        print("   /top - —Ä–µ–π—Ç–∏–Ω–≥")
        print("   /help - —Å–ø—Ä–∞–≤–∫–∞")
        print("\nüöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏–≥—Ä–µ!")
        print("üéØ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        
        await dp.start_polling(bot, drop_pending_updates=True)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")