#!/usr/bin/env python3
"""
üîç –ü–†–û–í–ï–†–ö–ê –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –¢–û–ö–ï–ù–ê
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–∫–µ–Ω "8211492486:AAEdPWoquZmjHdDaf0e-lqLrkjn57K8q-gM"
"""

import asyncio
import aiohttp

async def test_specific_token():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞"""
    token = "8211492486:AAEdPWoquZmjHdDaf0e-lqLrkjn57K8q-gM"
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –¢–û–ö–ï–ù–ê –ë–û–¢–ê")
    print("=" * 50)
    print(f"üîë –¢–æ–∫–µ–Ω: {token}")
    print(f"üìè –î–ª–∏–Ω–∞: {len(token)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞
    if ":" in token:
        parts = token.split(":")
        bot_id, bot_hash = parts
        print(f"ü§ñ Bot ID: {bot_id}")
        print(f"üîë Hash: {bot_hash}")
        print(f"üìê Hash –¥–ª–∏–Ω–∞: {len(bot_hash)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if len(bot_hash) == 35:
            print("‚úÖ –§–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
        else:
            print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ö–µ—à–∞")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ Telegram API
    print("\nüåê –ü–†–û–í–ï–†–ö–ê –ß–ï–†–ï–ó TELEGRAM API")
    print("-" * 30)
    
    url = f"https://api.telegram.org/bot{token}/getMe"
    print(f"üì° URL: {url}")
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url, timeout=15) as response:
                print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status}")
                
                if response.status == 200:
                    data = await response.json()
                    print(f"üìã –û—Ç–≤–µ—Ç: {data}")
                    
                    if data.get('ok'):
                        bot_info = data['result']
                        print("\n‚úÖ –¢–û–ö–ï–ù –î–ï–ô–°–¢–í–ò–¢–ï–õ–¨–ù–´–ô!")
                        print(f"ü§ñ –ò–º—è: {bot_info.get('first_name')}")
                        print(f"üë§ Username: @{bot_info.get('username')}")
                        print(f"üÜî ID: {bot_info.get('id')}")
                        print(f"üîó –ü–æ–¥–¥–µ—Ä–∂–∫–∞ inline: {bot_info.get('supports_inline_queries', False)}")
                        return True
                    else:
                        print(f"‚ùå API –æ—à–∏–±–∫–∞: {data}")
                        return False
                        
                elif response.status == 401:
                    error_data = await response.json()
                    print(f"‚ùå –¢–û–ö–ï–ù –ù–ï–î–ï–ô–°–¢–í–ò–¢–ï–õ–ï–ù (401)")
                    print(f"üìù –î–µ—Ç–∞–ª–∏: {error_data}")
                    return False
                    
                else:
                    error_text = await response.text()
                    print(f"‚ùå HTTP –æ—à–∏–±–∫–∞ {response.status}")
                    print(f"üìù –û—Ç–≤–µ—Ç: {error_text}")
                    return False
                    
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

async def test_with_aiogram():
    """–¢–µ—Å—Ç —Å aiogram –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ—à–∏–±–∫–∏"""
    print("\nü§ñ –¢–ï–°–¢ –° AIOGRAM")
    print("-" * 30)
    
    try:
        from aiogram import Bot
        from aiogram.utils.token import validate_token
        
        token = "8211492486:AAEdPWoquZmjHdDaf0e-lqLrkjn57K8q-gM"
        
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ aiogram...")
        validate_token(token)
        print("‚úÖ –¢–æ–∫–µ–Ω –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é aiogram")
        
        print("üîç –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Bot...")
        bot = Bot(token=token)
        print("‚úÖ –û–±—ä–µ–∫—Ç Bot —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        print("üîç –¢–µ—Å—Ç getMe —á–µ—Ä–µ–∑ aiogram...")
        me = await bot.get_me()
        print(f"‚úÖ Bot info: {me.first_name} (@{me.username})")
        
        await bot.session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ aiogram: {e}")
        print(f"üîç –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        return False

async def main():
    print("üéØ –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–û–ö–ï–ù–ê")
    print("=" * 50)
    
    # 1. –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API
    api_ok = await test_specific_token()
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ aiogram
    aiogram_ok = await test_with_aiogram()
    
    print("\n" + "=" * 50)
    print("üìã –ò–¢–û–ì–ò")
    print("=" * 50)
    print(f"üåê Telegram API: {'‚úÖ OK' if api_ok else '‚ùå FAIL'}")
    print(f"ü§ñ aiogram: {'‚úÖ OK' if aiogram_ok else '‚ùå FAIL'}")
    
    if api_ok and not aiogram_ok:
        print("\nü§î –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Å API, –Ω–æ –Ω–µ —Å aiogram")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –£—Å—Ç–∞—Ä–µ–≤—à–∞—è –≤–µ—Ä—Å–∏—è aiogram")
        print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏")
        print("   - –ö–æ–¥–∏—Ä–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞")
    elif not api_ok:
        print("\n‚ùå –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
        print("üí° –ù—É–∂–µ–Ω –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –æ—Ç @BotFather")
    else:
        print("\n‚úÖ –í—Å–µ OK! –¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å")

if __name__ == "__main__":
    asyncio.run(main())