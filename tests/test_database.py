#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
from database import UserDatabase

async def test_database():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = UserDatabase("test_users.db")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await db.init_db()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = 123456789
    username = "test_user"
    first_name = "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    user = await db.get_or_create_user(user_id, username, first_name)
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    balance = await db.get_balance(user_id)
    print(f"üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {balance}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    await db.update_balance(user_id, 1500)
    new_balance = await db.get_balance(user_id)
    print(f"üí∞ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ –±–∞–ª–∞–Ω—Å—É
    final_balance = await db.add_balance(user_id, -200)
    print(f"üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –≤—ã—á–µ—Ç–∞ 200: {final_balance}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å —Å—Ç–∞–≤–∫–∏
    await db.record_bet(user_id, 200, 400)
    print("‚úÖ –°—Ç–∞–≤–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    stats = await db.get_user_stats(user_id)
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {stats}")
    
    # –°–æ–∑–¥–∞–µ–º –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for i in range(2, 6):
        test_user_id = 123456789 + i
        await db.get_or_create_user(test_user_id, f"user_{i}", f"User {i}")
        await db.update_balance(test_user_id, 1000 + i * 100)
        await db.record_bet(test_user_id, 100, 50 * i)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    top_users = await db.get_top_users(5)
    print(f"üèÜ –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {top_users}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞
    await db.reset_user_balance(user_id)
    reset_balance = await db.get_balance(user_id)
    print(f"üîÑ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞: {reset_balance}")
    
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    import os
    if os.path.exists("test_users.db"):
        os.remove("test_users.db")
        print("üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞")

if __name__ == "__main__":
    asyncio.run(test_database())